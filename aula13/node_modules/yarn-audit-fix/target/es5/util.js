"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTemp = exports.readJson = exports.getWorkspaces = exports.getNpm = exports.getClosestNpm = exports.getYarn = exports.getSymlinkType = exports.isWindows = exports.formatFlags = exports.parseFlags = exports.invoke = void 0;
var fs_extra_1 = __importStar(require("fs-extra"));
var child_process_1 = __importDefault(require("child_process"));
var chalk_1 = __importDefault(require("chalk"));
var minimist_1 = __importDefault(require("minimist"));
var path_1 = require("path");
var glob_1 = require("./glob");
var pkg_dir_1 = require("pkg-dir");
var find_up_1 = require("find-up");
var find_cache_dir_1 = __importDefault(require("find-cache-dir"));
exports.invoke = function (cmd, args, cwd, silent, inherit) {
    var _a;
    if (silent === void 0) { silent = false; }
    if (inherit === void 0) { inherit = true; }
    !silent && console.log.apply(console, __spreadArrays([chalk_1.default.bold('invoke'), cmd], args));
    var stdio = inherit ? ['inherit', 'inherit', 'inherit'] : [null, null, null];
    var result = child_process_1.default.spawnSync(cmd, args, { cwd: cwd, stdio: stdio });
    if (result.error || result.status) {
        throw result;
    }
    return (_a = result.stdout) === null || _a === void 0 ? void 0 : _a.toString().trim();
};
exports.parseFlags = function (argv) { return minimist_1.default(argv, { '--': true }); };
var checkValue = function (key, value, omitlist, picklist) {
    return value !== 'false' && !omitlist.includes(key) && (!picklist.length || picklist.includes(key));
};
var formatFlag = function (key) { return (key.length === 1 ? '-' : '--') + key; };
exports.formatFlags = function (flags) {
    var picklist = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        picklist[_i - 1] = arguments[_i];
    }
    return Object.keys(flags).reduce(function (memo, key) {
        var omitlist = ['_', '--'];
        var value = flags[key];
        var flag = formatFlag(key);
        if (checkValue(key, value, omitlist, picklist)) {
            memo.push(flag);
            if (value !== true) {
                memo.push(value);
            }
        }
        return memo;
    }, []);
};
exports.isWindows = function () { return process.platform === 'win32' || /^(msys|cygwin)$/.test(process.env.OSTYPE); };
exports.getSymlinkType = function (type) {
    return type === 'junction' && exports.isWindows()
        ? type
        : 'dir';
};
// https://github.com/facebook/jest/issues/2993
exports.getYarn = function () { return exports.isWindows() ? 'yarn.cmd' : 'yarn'; };
exports.getClosestNpm = function (cmd) {
    var pkgRoot = pkg_dir_1.sync(__dirname) + '';
    return find_up_1.sync(function (dir) {
        var ref = path_1.resolve(dir, 'node_modules', '.bin', cmd);
        return fs_extra_1.default.existsSync(ref) ? ref : undefined;
    }, { cwd: pkgRoot }) + '';
};
exports.getNpm = function (requireNpmBeta, allowNpmBeta, silent, isWin) {
    if (silent === void 0) { silent = false; }
    if (isWin === void 0) { isWin = exports.isWindows(); }
    var cmd = isWin ? 'npm.cmd' : 'npm';
    if (requireNpmBeta && !allowNpmBeta && !silent) {
        console.warn('The project looks like monorepo, so it is recommended to use `--npm-v7` flag');
    }
    return allowNpmBeta
        ? exports.getClosestNpm(cmd)
        : cmd;
};
exports.getWorkspaces = function (cwd, manifest) {
    var packages = manifest.workspaces;
    if (packages && packages.packages) {
        packages = packages.packages;
    }
    if (!packages || !packages.length) {
        return [];
    }
    // Turn workspaces into list of package.json files.
    return glob_1.glob(packages.map(function (p) { return p.replace(/\/?$/, '/package.json'); }), {
        cwd: cwd,
        realpath: true,
        ignore: '**/node_modules/**',
    });
};
exports.readJson = function (path) {
    return JSON.parse(fs_extra_1.readFileSync(path).toString('utf-8').trim());
};
exports.getTemp = function (cwd, temp) {
    if (temp) {
        var _temp = path_1.resolve(temp);
        fs_extra_1.ensureDirSync(_temp);
        return _temp;
    }
    return find_cache_dir_1.default({ name: 'yarn-audit-fix', create: true, cwd: cwd }) + '';
};
