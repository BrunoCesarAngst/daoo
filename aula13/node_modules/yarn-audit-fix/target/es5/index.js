"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.run = exports.stages = void 0;
var fs_extra_1 = __importDefault(require("fs-extra"));
var synp_1 = __importDefault(require("synp"));
var path_1 = require("path");
var chalk_1 = __importDefault(require("chalk"));
var util_1 = require("./util");
var pkg_dir_1 = require("pkg-dir");
/**
 * Print runtime context digest.
 */
var printRuntimeDigest = function (_a) {
    var temp = _a.temp, cwd = _a.cwd, flags = _a.flags, manifest = _a.manifest;
    if (flags.silent) {
        return;
    }
    var isMonorepo = !!manifest.workspaces;
    var npmPath = util_1.getNpm(isMonorepo, flags['npm-v7']);
    var npmVersion = util_1.invoke(npmPath, ['--version'], temp, true, false);
    var nodeVersion = util_1.invoke('node', ['--version'], temp, true, false);
    var yarnAuditFixVersion = util_1.readJson(path_1.join(pkg_dir_1.sync(__dirname) + '', 'package.json')).version;
    console.log(JSON.stringify({
        isMonorepo: isMonorepo,
        npmPath: npmPath,
        npmVersion: npmVersion,
        nodeVersion: nodeVersion,
        yarnAuditFixVersion: yarnAuditFixVersion,
        temp: temp,
        cwd: cwd,
    }, null, 2).replace(/[":,{}]/g, ''));
};
/**
 * Prepare temp assets.
 * @param {TContext} cxt
 * @return {void}
 */
var createTempAssets = function (_a) {
    var temp = _a.temp, flags = _a.flags;
    fs_extra_1.default.copyFileSync('yarn.lock', path_1.join(temp, 'yarn.lock'));
    fs_extra_1.default.copyFileSync('package.json', path_1.join(temp, 'package.json'));
    fs_extra_1.default.existsSync('.npmrc') && fs_extra_1.default.copyFileSync('.npmrc', path_1.join(temp, '.npmrc'));
    fs_extra_1.default.existsSync('.yarnrc') && fs_extra_1.default.copyFileSync('.yarnrc', path_1.join(temp, '.yarnrc'));
};
/**
 * Provide symlinks to node_modules and workspaces
 * @param {TContext} cxt
 * @return {void}
 */
var createSymlinks = function (_a) {
    var temp = _a.temp, flags = _a.flags, cwd = _a.cwd, manifest = _a.manifest;
    var symlinkType = util_1.getSymlinkType(flags.symlink); // TODO fix fs-extra typings issue
    var workspaces = util_1.getWorkspaces(cwd, manifest);
    var links = __spreadArrays([path_1.join(cwd, 'node_modules')], workspaces);
    links.forEach(function (pkgPath) {
        var rel = pkgPath.replace(/\/package\.json$/, '').slice(cwd.length);
        var from = path_1.join(cwd, rel);
        var to = path_1.join(temp, rel);
        fs_extra_1.default.createSymlinkSync(from, to, symlinkType);
    });
};
/**
 * Convert yarn.lock to package-lock.json for further audit.
 * @param {TContext} cxt
 * @return {void}
 */
var yarnLockToPkgLock = function (_a) {
    var temp = _a.temp;
    var pgkLockJsonData = synp_1.default.yarnToNpm(temp, true);
    fs_extra_1.default.writeFileSync(path_1.join(temp, 'package-lock.json'), pgkLockJsonData);
    fs_extra_1.default.removeSync(path_1.join(temp, 'yarn.lock'));
};
/**
 * Apply npm audit fix.
 * @param {TContext} cxt
 * @return {void}
 */
var npmAuditFix = function (_a) {
    var temp = _a.temp, flags = _a.flags, cwd = _a.cwd, manifest = _a.manifest;
    var requireNpmBeta = !!manifest.workspaces;
    var npm = util_1.getNpm(requireNpmBeta, flags['npm-v7'], flags.silent);
    var defaultFlags = {
        'package-lock-only': true,
    };
    var auditFlags = util_1.formatFlags(__assign(__assign({}, defaultFlags), flags), 'package-lock-only', 'verbose', 'loglevel', 'only', 'force', 'audit-level', 'silent', 'registry');
    var auditArgs = __spreadArrays([
        'audit',
        'fix'
    ], auditFlags, [
        '--prefix', temp,
    ]);
    util_1.invoke(npm, auditArgs, temp, flags.silent);
};
/**
 * Generate yarn.lock by package-lock.json data.
 * @param {TContext} cxt
 * @return {void}
 */
var yarnImport = function (_a) {
    var temp = _a.temp, flags = _a.flags;
    var yarnLockData = synp_1.default.npmToYarn(temp, true);
    fs_extra_1.default.writeFileSync(path_1.join(temp, 'yarn.lock'), yarnLockData);
    fs_extra_1.default.copyFileSync(path_1.join(temp, 'yarn.lock'), 'yarn.lock');
};
/**
 * Apply yarn install to fetch packages after yarn.lock update.
 * @param {TContext} cxt
 * @return {void}
 */
var yarnInstall = function (_a) {
    var cwd = _a.cwd, flags = _a.flags;
    util_1.invoke(util_1.getYarn(), __spreadArrays(['--update-checksums'], util_1.formatFlags(flags, 'verbose', 'silent', 'registry')), cwd, flags.silent);
};
/**
 * Clean up temporaries.
 * @param {TContext} cxt
 * @return {void}
 */
var clear = function (_a) {
    var temp = _a.temp;
    return fs_extra_1.default.emptyDirSync(temp);
};
exports.stages = [
    [
        'Runtime digest',
        printRuntimeDigest,
    ],
    [
        'Preparing temp assets...',
        clear,
        createTempAssets,
        createSymlinks,
    ],
    [
        'Generating package-lock.json from yarn.lock...',
        yarnLockToPkgLock,
    ],
    [
        'Applying npm audit fix...',
        npmAuditFix,
    ],
    [
        'Updating yarn.lock from package-lock.json...',
        yarnImport,
        yarnInstall,
        clear,
    ],
    [
        'Done',
    ],
];
/**
 * Public static void main.
 */
exports.run = function (flags) {
    if (flags === void 0) { flags = {}; }
    return __awaiter(void 0, void 0, void 0, function () {
        var cwd, manifest, temp, ctx, _i, stages_1, _a, description, steps, _b, steps_1, step;
        return __generator(this, function (_c) {
            cwd = process.cwd();
            manifest = util_1.readJson(path_1.join(cwd, 'package.json'));
            temp = util_1.getTemp(cwd, flags.temp);
            ctx = {
                cwd: cwd,
                temp: temp,
                flags: flags,
                manifest: manifest,
            };
            for (_i = 0, stages_1 = exports.stages; _i < stages_1.length; _i++) {
                _a = stages_1[_i], description = _a[0], steps = _a.slice(1);
                !flags.silent && console.log(chalk_1.default.bold(description));
                for (_b = 0, steps_1 = steps; _b < steps_1.length; _b++) {
                    step = steps_1[_b];
                    step(ctx);
                }
            }
            return [2 /*return*/];
        });
    });
};
